buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.asciidoctor:asciidoctorj-diagram:1.5.0'
    }
}

plugins {
    id 'org.asciidoctor.convert'        version '1.5.3'
    id 'com.jfrog.bintray'              version '1.3.1'
    id 'org.ajoberstar.grgit'           version '1.3.0'
    id 'org.ajoberstar.github-pages'    version '1.3.0'
}

ext.groovyVersion = '2.4.7'
ext.slf4jVersion = '1.7.21'

allprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'

    version = bitcoinjAddonsVersion     // set in gradle.properties
    group = 'com.msgilligan'

    repositories {
        jcenter()
    }
}

subprojects {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    dependencies {
        compile 'org.bitcoinj:bitcoinj-core:0.14.3'
        compile "org.slf4j:slf4j-api:${slf4jVersion}"

        testCompile "org.codehaus.groovy:groovy:${groovyVersion}"
        testCompile("org.spockframework:spock-core:1.1-groovy-2.4-rc-2") {
            exclude module: "groovy-all"
        }

        testRuntime  "org.slf4j:slf4j-jdk14:${slf4jVersion}"          // Runtime implementation of slf4j
    }

    tasks.withType(JavaCompile) {
        doFirst {
            if (sourceCompatibility == '1.7' && System.env.JDK7_HOME != null) {
                options.bootClasspath = "$System.env.JDK7_HOME/jre/lib/rt.jar"
                //options.bootClasspath += "$File.pathSeparator$System.env.JDK7_HOME/jre/lib/jce.jar"
                // use the line above as an example to add jce.jar
                // and other specific JDK jars
            }
        }
    }
}

apply from: 'gradle/idea.gradle'
apply from: 'gradle/javadoc.gradle'
apply from: 'gradle/asciidoctor.gradle'
apply from: 'gradle/github-pages.gradle'
apply from: 'gradle/bintray.gradle'

task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/allTests")
    // Include the results from the `test` task in all subprojects
    reportOn subprojects*.test
}

task buildCI(dependsOn: [build, testReport, javadocAll, asciidoctor])
task jenkinsBuild(dependsOn: buildCI)
