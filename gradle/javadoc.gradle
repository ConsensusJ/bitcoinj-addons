//if (JavaVersion.current().isJava8Compatible()) {
//    tasks.withType(Javadoc) {
//        // disable the crazy super-strict doclint tool in Java 8
//        //noinspection SpellCheckingInspection
//        options.addStringOption('Xdoclint:none', '-quiet')
//    }
//}

def javadocSpec = {
//    options.overview = "doc/javadoc-overview.adoc"
    options.docletpath = configurations.asciidoclet.files.asType(List)
    options.doclet = 'org.asciidoctor.Asciidoclet'
    options.addStringOption '-base-dir', "${projectDir}"
    options.addStringOption '-attribute',
            "name=${project.name}," +
                    "version=${project.version}," +
                    "title-link=http://example.com[${project.name} ${project.version}]"
    options.links(  'http://docs.oracle.com/javase/7/docs/api/',
                    'https://bitcoinj.github.io/javadoc/0.13.2/',
                    'http://fasterxml.github.io/jackson-core/javadoc/2.6/',
                    'http://fasterxml.github.io/jackson-databind/javadoc/2.6/')

}

allprojects {

    configurations {
        asciidoclet
    }

    dependencies {
        asciidoclet 'org.asciidoctor:asciidoclet:1.+'
    }

    javadoc javadocSpec

}

task javadocAll(type: Javadoc) {
    source subprojects.collect {project -> project.sourceSets.main.allJava }
    classpath = files(subprojects.collect {project -> project.sourceSets.main.compileClasspath})
    destinationDir = new File(buildDir, 'alljavadoc')
}
javadocAll javadocSpec
javadocAll {
    options.overview = "doc/javadoc-overview.adoc"
    inputs.file(options.overview)
}
javadocAll.doLast {
    logger.warn "Consolidated JavaDoc generated at <file://${javadocAll.destinationDir}/index.html>"
}
