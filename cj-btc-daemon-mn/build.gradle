plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "4.0.4"
    id "application"
    id "net.ltgt.apt-eclipse" version "0.21"
    id "net.ltgt.apt-idea" version "0.21"
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.1.0.RC1'
    }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-graal"
    annotationProcessor "io.micronaut:micronaut-inject-java"

    implementation project(':consensusj-jsonrpc')
    implementation project(':bitcoinj-json')
    implementation project(':cj-btc-services')

    implementation 'com.google.guava:guava:28.2-android'

    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-runtime"
    compileOnly "com.oracle.substratevm:svm"

    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"

    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
test.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')

mainClassName = "org.consensusj.daemon.micronaut.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}
