plugins {
    id 'java-library'
}

dependencies {
    compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"

    testImplementation "org.codehaus.groovy:groovy:${groovyVersion}:indy"
    testImplementation ("org.codehaus.groovy:groovy-json:${groovyVersion}:indy") {
        transitive = false
    }
}

ext.moduleName = 'org.consensusj.jsonrpc'
def mainClassName = "org.consensusj.jsonrpc.introspection.sample.MathTool"

jar {
    inputs.property("moduleName", moduleName)
    manifest {
        attributes  'Implementation-Title': 'ConsensusJ JSON-RPC Sample tool w/introspection',
                'Automatic-Module-Name': moduleName,
                'Main-Class': mainClassName,
                'Implementation-Version': archiveVersion.get()
    }
}

test {
    testLogging.showStandardStreams = true
    systemProperty 'java.util.logging.config.file', "${project.projectDir}/src/test/logging.properties"
    beforeTest { descriptor ->
        logger.lifecycle('    ' + descriptor.getName())
    }
}

// Compile a native image using Graal's native-image tool
// Graal must be installed at $GRAAL_HOME
task graalNativeImage(type:Exec, dependsOn: jar) {
    workingDir = projectDir
    executable = "${System.env.GRAAL_HOME}/bin/native-image"
    args = [ '--verbose',
             '-cp', configurations.runtime.asPath,
             '-jar', jar.archiveFile.get(),
             '-H:Path=build',
             '-H:Name=MathTool',
             '-H:ReflectionConfigurationFiles=graal-reflection-config.json',
             '-H:EnableURLProtocols=http',
             '-H:+ReportUnsupportedElementsAtRuntime'
    ]
}
