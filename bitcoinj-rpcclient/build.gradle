plugins {
    id 'maven'
}

sourceCompatibility = 1.7

dependencies {
    compile project(':bitcoinj-json')
    compile 'com.fasterxml.jackson.core:jackson-core:2.6.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.6.1'

    compile "org.codehaus.groovy:groovy:${groovyVersion}"
    compile "org.codehaus.groovy:groovy-json:${groovyVersion}"

    testCompile project(':bitcoinj-groovy') // Use Groovy extensions in tests

    testRuntime  'org.slf4j:slf4j-jdk14:1.7.7'          // Runtime implementation of slf4j
}

// Test Structure
sourceSets {
    integrationTest {
        compileClasspath = sourceSets.main.output + configurations.testRuntime
        runtimeClasspath = output + sourceSets.main.output + configurations.testRuntime
        groovy {
            srcDir 'src/integ/groovy'
        }
        resources {
            srcDir 'src/integ/resources'
        }
    }
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
    testLogging.showStandardStreams = true
}

task regTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
    testLogging.showStandardStreams = true
    beforeSuite { descriptor ->
        if (descriptor.getClassName() != null) {
            logger.lifecycle('\033[1m' + descriptor.getName() + "\033[0m") // bold
        }
    }
    beforeTest { descriptor ->
        logger.lifecycle('    ' + descriptor.getName())
    }

    systemProperty 'regtest', true
    systemProperties ([ "omni.test.rpcTestUser": rpcTestUser,
                        "omni.test.rpcTestPassword": rpcTestPassword,
    ])
    include 'com/msgilligan/bitcoinj/**'
}
