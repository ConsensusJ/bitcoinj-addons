/*
 * CLI tool support library and `cj-bitcoin-cli` tool.
 * `cj-bitcoin-cli` tool is compiled to a native command-line tool with Graal `native-image`
 */
plugins {
    id 'java-library'
}

sourceCompatibility = 9
targetCompatibility = 9

dependencies {
    // Using 'api' here breaks Spock integration test classpath for some reason
    implementation project(':consensusj-jsonrpc-cli')
    implementation project(':cj-btc-jsonrpc')

    implementation 'commons-cli:commons-cli:1.4'
    
    runtimeOnly "org.slf4j:slf4j-jdk14:${slf4jVersion}"

    testCompile "org.codehaus.groovy:groovy:${groovyVersion}:indy"
}

def mainClassName = "org.consensusj.bitcoin.cli.BitcoinCLITool"

jar {
    manifest {
        attributes 'Implementation-Title': 'ConsensusJ Bitcoin CLI tool',
                    'Main-Class': mainClassName,
                    'Implementation-Version': archiveVersion.get()
    }
}


// Compile a native image using Graal's native-image tool
// Graal must be installed at $GRAAL_HOME
task graalNativeImage(type:Exec, dependsOn: jar) {
    workingDir = projectDir
    executable = "${System.env.GRAAL_HOME}/bin/native-image"
    args = [ '--verbose',
             '--no-fallback',
             '-cp', "${-> sourceSets.main.runtimeClasspath.asPath}", // Lazy configuration resolution
             '-jar', jar.archiveFile.get(),
             '-H:Path=build',
             '-H:Name=cj-bitcoin-cli',
             '-H:ReflectionConfigurationFiles=graal-reflection-config.json',
             '-H:EnableURLProtocols=http',
             '-H:+ReportUnsupportedElementsAtRuntime'
    ]
}


// Test Structure
sourceSets {
    integrationTest {
        compileClasspath = sourceSets.main.output + configurations.testRuntime
        runtimeClasspath = output + sourceSets.main.output + configurations.testRuntime
        groovy {
            srcDir 'src/integ/groovy'
        }
        resources {
            srcDir 'src/integ/resources'
        }
    }
}

task regTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
    testLogging.showStandardStreams = true
    beforeSuite { descriptor ->
        if (descriptor.getClassName() != null) {
            logger.lifecycle('\033[1m' + descriptor.getName() + "\033[0m") // bold
        }
    }
    beforeTest { descriptor ->
        logger.lifecycle('    ' + descriptor.getName())
    }

    systemProperty 'regtest', true
    systemProperty 'java.util.logging.config.file', "${project.projectDir}/src/integ/logging.properties"
    systemProperties ([ "omni.test.rpcTestUser": rpcTestUser,
                        "omni.test.rpcTestPassword": rpcTestPassword,
    ])
    include 'org/consensusj/bitcoin/cli/**'
}
